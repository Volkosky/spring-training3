<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
	default-init-method="init" default-destroy-method="destruct">

	<!-- <bean id="helloWorld-singleton" class="com.volkosky.spring3.HelloWorld" 
		scope="singleton"> <property name="message" value="Hello World!" /> <property 
		name="message2" value="Hello Second World!" /> </bean> <bean id="helloWorld-prototype" 
		class="com.volkosky.spring3.HelloWorld" scope="prototype"> <property name="message" 
		value="Hello World! - prototype" /> <property name="message2" value="Hello 
		Second World! - prototype" /> </bean> -->

	<!-- <bean id="initDestruct" class="com.volkosky.spring3.InitDestruct"> 
		</bean> -->

	<!-- <bean id="beanTeamplate" abstract="true"> <property name="message" 
		value="(A) Hello World!" /> <property name="message2" value="(A) Hello Second 
		World!" /> <property name="message3" value="(A) Namaste India!" /> </bean> 
		<bean id="helloIndia" class="com.volkosky.spring3.HelloIndia" parent="beanTeamplate"> 
		<property name="message" value="Hello India!" /> <property name="message3" 
		value="Namaste India!" /> </bean> -->

	<bean id="textEditor" class="com.volkosky.spring3.dependencyInjection.TextEditor">
		<property name="spellChecker">
			<bean id="spellChecker" class="com.volkosky.spring3.dependencyInjection.SpellChecker" />
		</property>
	</bean>
	
	<bean id = "javaCollection" class = "com.volkosky.spring3.dependencyInjection.JavaCollection">      
      <!-- results in a setAddressList(java.util.List) call -->
      <property name = "addressList">
         <list>
            <value>INDIA</value>
            <value>Pakistan</value>
            <value>USA</value>
            <value>USA</value>
            <!-- <ref bean = "address1"/> -->
         </list>
      </property>
      <!-- results in a setAddressSet(java.util.Set) call -->
      <property name = "addressSet">
         <set>
            <value>INDIA</value>
            <value>Pakistan</value>
            <value>USA</value>
            <value>USA</value>
         </set>
      </property>
      <!-- results in a setAddressMap(java.util.Map) call -->
      <property name = "addressMap">
         <map>
            <entry key = "1" value = "INDIA"/>
            <entry key = "2" value = "Pakistan"/>
            <entry key = "3" value = "USA"/>
            <entry key = "4" value = "USA"/>
            <!-- <entry key = "5" value-ref = "address1"/> -->
            <entry key = "5"><null/></entry>
         </map>
      </property>    
      <!-- results in a setAddressProp(java.util.Properties) call -->
      <property name = "addressProp">
         <props>
            <prop key = "one">INDIA</prop>
            <prop key = "one">INDIA</prop>
            <prop key = "two">Pakistan</prop>
            <prop key = "three">USA</prop>
            <prop key = "four">USA</prop>           
         </props>
      </property>
   </bean>

</beans>